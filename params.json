{"name":"Sk","tagline":"Skills and Knowledges that may or may not be used.","body":"SK\r\n==\r\n\r\nSkills and Knowledges that may or may not be used.\r\n\r\n### Programming Language and Tools\r\n\r\n- C/C++\r\n  - 数据处理\r\n  - 算法实现及优化\r\n- Python\r\n  - 快速数据处理\r\n  - 数据分析与可视化\r\n  - 算法原型实现\r\n  - 各种日常打杂\r\n- Matlab\r\n  - 数据可视化\r\n  - 算法原型实现\r\n- Git && Github\r\n  - 代码管理与版本控制\r\n  - 代码分享\r\n- CMake\r\n  - C/C++ 代码管理\r\n  - C/C++ 项目跨平台构建与分发\r\n\r\n### MOOC\r\n\r\n- [Coursera][coursera]\r\n- [Udacity][udacity], 需翻墙\r\n- [Edx][edx], 需翻墙\r\n- [网易公开课][open-163]\r\n- [Machine Learning][ml-ng] by [Andrew Ng][ng]\r\n- [How to Use Git and GitHub][uda-git]\r\n- [Introduction to Computer Vision][uda-cv]\r\n- [抽象编程][sf-ab]\r\n\r\n### C/C++\r\n\r\n- [isocpp/CppCoreGuidelines](https://github.com/isocpp/CppCoreGuidelines)\r\n- [Google 开源项目风格指南中文版](http://zh-google-styleguide.readthedocs.org/en/latest/contents/)\r\n- [awesome-cpp](https://github.com/fffaraz/awesome-cpp)\r\n- 在没有编译环境限制的条件下，建议使用 C++11/14 新特征\r\n- 了解 VC/GCC 等编译器的编译行为，对于 GCC 包括但不限于 -I -L -l -D 等选项，不要只会在 IDE 中点按钮\r\n- 熟悉 Linux 下源码编译流程及相关工具集\r\n\r\n### Python\r\n\r\n- [The Hitchhiker’s Guide to Python](http://docs.python-guide.org/en/latest/)\r\n- [awesome-python](https://github.com/vinta/awesome-python)\r\n\r\n### Regular Expression\r\n\r\n- 正则表达式\r\n- 文本处理与信息提取\r\n- 各种编程语言自身的实现\r\n\r\n### Recommended Tools\r\n\r\n- 操作系统平台\r\n  - Windows\r\n  - Linux\r\n  - Unix\r\n- 集成开发环境\r\n  - [Visual Studio][vs]\r\n  - [Eclipse][eclipse]\r\n  - [Code Blocks][codeblocks]\r\n  - [PyCharm][pycharm]\r\n- 文本编辑器\r\n  - [Sublime Text][sublime]\r\n  - [Notepad++][notepad++]\r\n- 终端文本编辑器\r\n  - [Vim][vim]\r\n  - [Emacs][emacs]\r\n- 科学计算集成环境\r\n  - [Spyder][spyder]\r\n  - [Matlab][matlab]\r\n\r\n### Machine Learning and Data Mining\r\n\r\n- [Yoshua Bengio 关于 DL 的书](http://www.iro.umontreal.ca/~bengioy/dlbook/)\r\n  - 线性代数与概率论基础\r\n  - ML 理论基础\r\n  - DL 理论基础\r\n  - 前沿性模型分析\r\n- [好东西论坛](http://memect.com/)\r\n  - [机器学习日报](http://ml.memect.com/)\r\n  - [大数据日报](http://bd.memect.com/)\r\n  - [Python日报](http://py.memect.com/)\r\n  - [爱可可老师今日推荐](http://me.memect.com/fly51fly/)\r\n- [Caffe](http://caffe.berkeleyvision.org/)\r\n  - CNN 框架\r\n  - 快速搭建深度学习算法原型并进行训练\r\n  - 提供 Python 与 Matlab 接口\r\n- Scientific Python\r\n  - [Numpy](http://www.numpy.org/) 基础科学计算库\r\n  - [Theano](http://deeplearning.net/software/theano/)\r\n    - ML && DL 基础计算库\r\n    - 快速算法原型搭建\r\n  - [Pandas](http://pandas.pydata.org/)\r\n    - 结构化数据清洗与处理\r\n    - 配合 [matplotlib](http://matplotlib.org/) 做数据可视化\r\n  - [Scrapy](http://scrapy.org/)\r\n    - 网络数据采集与清洗\r\n    - 结构化数据输出供后续应用\r\n  - [Anaconda](https://www.continuum.io/downloads)\r\n    - Python 科学计算集成发行版\r\n    - 包含众多 Python 科学计算相关的库\r\n- awesome [dl][dl] list in github\r\n\r\n### Libraries\r\n\r\n- [OpenCV][opencv] 计算机视觉基础开发库\r\n  - 基础矩阵运算\r\n  - 图像处理\r\n  - 开发图像与视觉相关的算法或系统\r\n- [OpenMP][openmp] 单机多线程并行计算\r\n  - 单机多核下的并行计算\r\n  - 并行化算法, 提高 CPU 利用率, 减少计算时间\r\n  - 简单的指令便可使串行算法并行化\r\n- [OpenMPI][openmpi] 多机并行计算\r\n  - 多机下的并行计算\r\n  - 可拓展性强, 算法复杂\r\n- [CUDA][cuda] GPU 并行计算\r\n  - GPU 下的并行计算\r\n  - CUDA 是一门编程语言\r\n\r\n### Linux\r\n\r\n- Linux 操作系统\r\n  - Linux 基本命令集使用\r\n  - 熟悉 Linux 文件系统, 用户权限管理, 网络配置, 路由配置\r\n  - 管理和使用 Linux 服务器\r\n  - 熟悉 Linux 包管理机制及其工具链\r\n  - 熟练运用 gcc 工具链进行源码编译\r\n  - Shell/Python 日常脚本编写\r\n  - C/C++ 跨平台代码编写\r\n  - 大规模数据处理与模型训练的运行环境\r\n  - vim [快捷键工具可参考][vim]\r\n- [Ubuntu][ubuntu]\r\n  - 目前用户量最大的 Linux 发行版, 社区比较大, 资源比较多, 适合 Linux 入门\r\n- [CentOS][centos]\r\n  - 红帽开源代码的再编译\r\n  - 企业服务器用这个系统的比较多, 我们自己的服务器上也装了这个系统\r\n  - 软件源中的软件版本非常低, 大部分库与工具自己用 gcc 编译\r\n- [VirtualBox][vbox]\r\n  - 开源免费的虚拟机运行平台\r\n- [Vagrant][vagrant]\r\n  - 虚拟机管理工具集\r\n  - 方便统一和分发项目的 Linux 开发环境\r\n\r\n### Kinect\r\n\r\n- Microsoft 开发的3D体感设备，可捕捉彩色图像，深度信息，骨骼动作和面部器官状态\r\n- [官网API介绍][kinect官网API]\r\n- [论坛][Kinect论坛]\r\n- [博客一][kinect博客1]\r\n- [博客二][kinect博客2]\r\n\r\n### 3D Vision\r\n\r\nTo be added\r\n\r\n### MFC\r\n\r\n- 以C++类的形式封装了Windows API，并且包含一个应用程序框架, 多用于界面\r\n- [windows 消息机制原理][消息机制]\r\n- 《windows 程序设计》\r\n- [MFC编程入门教程][鸡啄米]\r\n- [实时动态曲线描绘控件][动态曲线控件]\r\n- MFC 默认有内存泄露检测的功能, 每个文件可加入下面的代码，这个很赞。\r\n  ```c++\r\n\r\n  #ifdef _DEBUG\r\n  #define new DEBUG_NEW\r\n  #endif\r\n\r\n  ```\r\n\r\n  在含有以上代码的cpp文件中分配内存后假如没有删除，那么停止程序的时候，VisualStudio的Output窗口就会显示如下的信息了：\r\n  ```c++\r\n\r\n  Detected memory leaks!\r\n  Dumping objects ->\r\n  d:\\code\\mfctest\\mfctest.cpp(80) : {157} normal block at 0x003AF170, 4 bytes long.\r\n   Data: < > 00 00 00 00\r\n  Object dump complete.\r\n\r\n  ```\r\n  在Output窗口双击粗体字那一行，那么IDE就会打开该文件，定位到该行，很容易看出是哪出现了内存泄露。\r\n\r\n### To Be Continued……\r\n\r\n\r\n[coursera]: https://www.coursera.org/\r\n[udacity]: https://www.udacity.com/\r\n[edx]: https://www.edx.org/\r\n[ml-ng]: https://www.coursera.org/learn/machine-learning\r\n[ng]: http://www.andrewng.org/\r\n[uda-git]: https://www.udacity.com/course/how-to-use-git-and-github--ud775\r\n[uda-cv]: https://www.udacity.com/course/introduction-to-computer-vision--ud810\r\n[open-163]: http://open.163.com/\r\n[opencv]: http://opencv.org/\r\n[openmp]: http://openmp.org/wp/\r\n[openmpi]: http://www.open-mpi.org/\r\n[cuda]: https://developer.nvidia.com/cuda-zone\r\n[ubuntu]: http://www.ubuntu.org.cn/\r\n[vbox]: https://www.virtualbox.org/\r\n[vagrant]: https://www.virtualbox.org/\r\n[sf-ab]: http://open.163.com/special/opencourse/abstractions.html\r\n[centos]: https://www.centos.org/\r\n[鸡啄米]:http://www.jizhuomi.com/software/257.html\r\n[vim]:https://github.com/amix/vimrc\r\n[动态曲线控件]:http://blog.csdn.net/nuaazdh/article/details/7857223\r\n[消息机制]:http://winprog.org/tutorial/zh/start_cn.html\r\n[Kinect论坛]:http://guoming.me/kinect2\r\n[kinect官网API]:https://msdn.microsoft.com/en-us/library/dn799271.aspx?tduid=(7b855072b4348da13a3f83e9f9d2f339)(256380)(2459594)(TnL5HPStwNw-8JxCC.2UebmmOxAGOzCD4w)()\r\n[kinect博客1]:http://blog.csdn.net/dustpg/article/category/2408183/2\r\n[kinect博客2]:https://kheresy.wordpress.com/kinect-for-windows-v2-cpp-index/\r\n[dl]:https://github.com/ty4z2008/Qix/blob/master/dl.md\r\n[spyder]: https://github.com/spyder-ide/spyder\r\n[pycharm]: https://www.jetbrains.com/pycharm/\r\n[matlab]: http://cn.mathworks.com/products/matlab/\r\n[vim]: http://www.vim.org/\r\n[emacs]: https://www.gnu.org/software/emacs/\r\n[sublime]: http://www.sublimetext.com/\r\n[notepad++]: https://notepad-plus-plus.org/\r\n[vs]: https://www.visualstudio.com/\r\n[codeblocks]: http://www.codeblocks.org/\r\n[eclipse]: https://eclipse.org/\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}